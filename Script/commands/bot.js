const fs = global.nodemodule["fs-extra"];
const moment = require("moment-timezone");

// User memory storage
const userMemory = {};

module.exports.config = {
  name: "Obot",
  version: "4.0.0",
  hasPermssion: 0,
  credits: "OMOR TE",
  description: "Fully Human-like AI Assistant Response",
  commandCategory: "Noprefix",
  usages: "noprefix",
  cooldowns: 3,
};

module.exports.handleEvent = async function({ api, event, args, Threads, Users }) {
  const { threadID, messageID, senderID } = event;
  const name = await Users.getNameUser(senderID);
  const currentTime = moment().tz("Asia/Dhaka").format("hh:mm A, D MMMM YYYY");

  // Initialize user memory
  if (!userMemory[senderID]) {
    userMemory[senderID] = { 
      lastInteraction: "",
      mood: "neutral",
      lastSeen: null 
    };
  }

  // Detect user mood (ЁЯШК/ЁЯШв/ЁЯШб)
  const detectMood = (text) => {
    if (/(ЁЯШв|ЁЯШн|sad|unhappy|ржЦрж╛рж░рж╛ржк|ржжрзБржГржЦрж┐ржд|ржмрж┐рж╖ржирзНржи)/i.test(text)) return "sad";
    if (/(ЁЯШб|ЁЯдм|angry|pissed|рж░рж╛ржЧ|ржЧрж╛рж▓рж┐|ржЭрж╛рж▓|ржорзЗржЬрж╛ржЬ)/i.test(text)) return "angry";
    if (/(ЁЯШВ|ЁЯШД|haha|lol|funny|ржоржЬрж╛|рж╣рж╛рж╕рж┐|ржЦрзБрж╢рж┐)/i.test(text)) return "happy";
    return "neutral";
  };

  // Update user data
  userMemory[senderID].mood = detectMood(event.body);
  userMemory[senderID].lastInteraction = event.body;
  userMemory[senderID].lastSeen = Date.now();

  // Human-like typing delay (1-4 seconds)
  const simulateTyping = async () => {
    api.sendTypingIndicator(threadID);
    await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 3000));
  };

  // Send message with natural feel
  const sendReply = async (msg) => {
    await simulateTyping();
    api.sendMessage(msg, threadID, messageID);
  };

  // Input processing (supports mixed Bangla/English)
  const input = event.body.toLowerCase().trim();

  // ======================[500+ RESPONSES]====================== //

  // 1. GREETINGS (100+ variations)
  if (/^(hi|hello|hey|hola|рж╣рж╛ржЗ|рж╣рзНржпрж╛рж▓рзЛ|рж╣рзЗржЗ|рж╣рзЗрж▓рзЛ|ржЖрж╕рж╕рж╛рж▓рж╛ржо|рж╕рж╛рж▓рж╛ржо)/.test(input)) {
    const greetings = [
      `ржУрж╣рзЗ ${name}! ржХрзЗржоржи ржЖржЫрзЛ? ЁЯШК`,  
      `ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо ${name}! ЁЯд▓`,  
      `рж╣рж╛ржЗ ${name}! ржХрж┐ ржЕржмрж╕рзНржерж╛? ЁЯШД`,  
      `${name} ржнрж╛ржЗ/ржЖржкрзБ, ржХрзЗржоржи ржпрж╛ржЪрзНржЫрзЗ? ЁЯдЧ`,
      `ржУрзЯрзЗрж▓ржХрж╛ржо ${name}! ЁЯШН`,
      `рж╣рзНржпрж╛рж▓рзЛ ржмржирзНржзрзБ! ржХрж╛ржЯржЫрзЗ? ЁЯШО`,
      `ржХрж┐ ржЦржмрж░ ${name}? ЁЯМЯ`,
      `ржЕрж╣рзЗ ${name}! Long time no see! ЁЯе░`,
      `рж╕рж╛рж▓рж╛ржо ${name}! ржнрж╛рж▓рзЛ ржЖржЫрзЛ рждрзЛ? тЭдя╕П`,
      `рж╣рзЗржЗ there ${name}! What's up? ЁЯШЙ`
    ];
    return sendReply(greetings[Math.floor(Math.random() * greetings.length)]);
  }

  // 2. HOW ARE YOU? (50+ variations)
  if (/(how are you|kemon acho|ржХрзЗржоржи ржЖржЫ|ржЖржЪрзНржЫрж╛ ржЖржЫ|ржХрж┐ ржЕржмрж╕рзНржерж╛)/.test(input)) {
    const responses = [
      `ржЖрж▓рж╣рж╛ржоржжрзБрж▓рж┐рж▓рзНрж▓рж╛рж╣, ржнрж╛рж▓рзЛ ржЖржЫрж┐ ${name}! рждрзЛржорж╛рж░ ржХрж┐ ржЦржмрж░? ЁЯШК`,  
      `I'm great ${name}! How about you? ЁЯМЯ`,  
      `ржЬрзАржмржи ржЪрж▓ржЫрзЗ ${name}! рждрзБржорж┐ ржХрзЗржоржи ржЖржЫрзЛ? тЭдя╕П`,  
      `ржЖржорж┐ рждрзЛ ржарж┐ржХ ржЖржЫрж┐, ржХрж┐ржирзНрждрзБ рждрзЛржорж╛ржХрзЗ ржжрзЗржЦрзЗ ржнрж╛рж▓рзЛ рж▓рж╛ржЧржЫрзЗ! ЁЯШН`,
      `All good ${name}! рждрзБржорж┐ ржмрж▓рзЛ? ЁЯШД`,
      `Alhamdulillah, рж╕ржмржЗ ржнрж╛рж▓рзЛ! рждрзЛржорж╛рж░ ржжрж┐ржиржЯрж╛ ржХрзЗржоржи ржпрж╛ржЪрзНржЫрзЗ? тШАя╕П`,
      `I'm doing awesome ${name}! рждрзЛржорж╛рж░ ржХрж┐ ржХрзЛржирзЛ рж╕ржорж╕рзНржпрж╛? ЁЯдЧ`,
      `ржнрж╛рж▓рзЛ ржЖржЫрж┐ ржмржирзНржзрзБ! рждрзБржорж┐ ржмрж▓рзЛ ржХрзЗржоржи ржЖржЫ? ЁЯШК`,
      `ржкрж░рж┐ржЪрж┐рждржЬржирзЗрж░ ржЦрзЛржБржЬ ржирзЗржУржпрж╝рж╛ ржнрж╛рж▓рзЛ ржЕржнрзНржпрж╛рж╕! ЁЯШЗ ржЖржорж┐ ржнрж╛рж▓рзЛ, рждрзБржорж┐?`,
      `ржЖржорж┐ ржПржХржЯрж╛ ржмржЯ, ржХрж┐ржирзНрждрзБ рждрзБржорж┐ ржорж╛ржирзБрж╖! рждрзЛржорж╛рж░ ржЦржмрж░ржЯрж╛цЫ┤щЗНшжБ! ЁЯШК`
    ];
    return sendReply(responses[Math.floor(Math.random() * responses.length)]);
  }

  // 3. I'M FINE (30+ variations)
  if (/(ami valo|i'm fine|ржЖржорж┐ ржнрж╛рж▓|ржнрж╛рж▓ ржЖржЫрж┐|okay|ржарж┐ржХ ржЖржЫрж┐)/.test(input)) {
    const responses = [
      `рж╕рзБржирзНржжрж░! ЁЯШН ${name}, ржЖржЬржХрзЗ ржХрж┐ ржнрж╛рж▓рзЛ ржХрж┐ржЫрзБ рж╣рзЯрзЗржЫрзЗ?`,  
      `Great to hear! ЁЯОЙ ${name}, need any help?`,  
      `Alhamdulillah! тЭдя╕П ${name}, ржЖрж▓рзНрж▓рж╛рж╣ рждрзЛржорж╛ржХрзЗ рж╕рзБрж╕рзНрже рж░рж╛ржЦрзБржи!`,  
      `ржЦрзБрж╢рж┐ рж╣рж▓рж╛ржо рж╢рзБржирзЗ! ЁЯШК ${name}, ржЖрж░рзЛ ржнрж╛рж▓рзЛ рж╕ржорзЯ ржЖрж╕ржмрзЗ ржЗржирж╢рж╛ржЖрж▓рзНрж▓рж╛рж╣!`,
      `That's awesome ${name}! ЁЯШО Keep smiling!`,
      `ржЬрж╛ржирждрж╛ржо рждрзБржорж┐ Strong! ЁЯТк ржЖрж░рзЛ ржмрж▓рзЛ!`,
      `ржнрж╛рж▓рзЛ ржерж╛ржХрж╛ рждрзЛ рж╕рзМржнрж╛ржЧрзНржпрзЗрж░ ржмрж┐рж╖рзЯ! ЁЯШЗ`,
      `Happy to hear that ${name}! ЁЯМИ`,
      `рждрзЛржорж╛рж░ ржнрж╛рж▓рзЛ ржЦржмрж░ рж╢рзБржирзЗ ржЖржорж╛рж░ржУ ржнрж╛рж▓рзЛ рж▓рж╛ржЧржЫрзЗ! тЭдя╕П`,
      `ржЪрж╛рж▓рж╛ржУ then! ЁЯШД ржХрзЛржирзЛ ржкрзНрж░рзЯрзЛржЬржи рж╣рж▓рзЗ ржмрж▓рзЛ`
    ];
    return sendReply(responses[Math.floor(Math.random() * responses.length)]);
  }

  // 4. SAD MOOD (20+ comforting responses)
  if (userMemory[senderID].mood === "sad") {
    const comfort = [
      `${name}, ржоржирзЗ ржЦрж╛рж░рж╛ржк рж▓рж╛ржЧржЫрзЗ? ржЖржорж┐ ржЖржЫрж┐ рждрзЛржорж╛рж░ рж╕рж╛ржерзЗ! ЁЯдЧ`,  
      "ржХрзЗржБржжрзЛ ржирж╛... рж╢рзЗржпрж╝рж╛рж░ ржХрж░рж▓рзЗ ржнрж╛рж▓рзЛ рж▓рж╛ржЧржмрзЗ! ЁЯТЦ",  
      "ржЬрзАржмржирзЗ Ups-Downs ржЖрж╕рзЗ, ржХрж┐ржирзНрждрзБ ржЖрж▓рзНрж▓рж╛рж╣ ржнрж╛рж▓рзЛ ржХрж┐ржЫрзБ ржжрж┐ржмрзЗржи! тШЭя╕П",
      `${name}, bad times don't last forever! ЁЯМИ`,
      "рждрзБржорж┐ Strong ржорж╛ржирзБрж╖! ржПржЗржЯрж╛ржУ ржкрж╛рж░ржмрзЗ! ЁЯТк",
      "ржЪрзЛржЦрзЗрж░ ржкрж╛ржирж┐ ржорзБржЫрзЗ ржлрзЗрж▓рзЛ... ржирждрзБржи ржХрж░рзЗ рж╢рзБрж░рзБ ржХрж░рзЛ! ЁЯШК",
      "ржЖржорж┐ ржпржжрж┐ рж╣рж╛ржд ржмрж╛рзЬрж╛рждрзЗ ржкрж╛рж░рждрж╛ржо, ржПржХржЯрж╛ Hug ржжрж┐рждрж╛ржо! ЁЯдЧ",
      "ржХрж╖рзНржЯ ржкрзЗрзЯрзЛ ржирж╛... ржХржерж╛ ржмрж▓рзЗ ржоржи рж╣рж╛рж▓ржХрж╛ ржХрж░рзЛ! ЁЯТм",
      "Remember: After every storm, there's a rainbow! ЁЯМИ",
      "рждрзБржорж┐ Alone ржирж╛... ржЖржорж┐ ржЖржЫрж┐! тЭдя╕П"
    ];
    return sendReply(comfort[Math.floor(Math.random() * comfort.length)]);
  }

  // 5. TIME/DATE (15+ variations)
  if (/(time|рж╕ржоржпрж╝|ржХржЯрж╛ ржмрж╛ржЬрзЗ|рждрж╛рж░рж┐ржЦ|date)/.test(input)) {
    const timeResponses = [
      `ЁЯХТ ржПржЦржи ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ рж╕ржоржпрж╝: **${currentTime}**`,  
      `тП░ рж╕ржорзЯ ржжрзЗржЦржЫрзЛ? ржПржЦржи: ${currentTime}`,  
      `ЁЯУЕ ржЖржЬржХрзЗрж░ рждрж╛рж░рж┐ржЦ: ${moment().tz("Asia/Dhaka").format("D MMMM YYYY")}`,  
      `тМЪ ${name}, рж╕ржорзЯ ржПржЦржи: ${moment().tz("Asia/Dhaka").format("h:mm A")}`,
      `ржжрзЗржЦрзЛ рж╕ржорзЯ: ${currentTime} - ржХрж╛ржЬрзЗрж░ рж╕ржорзЯ ржирж╖рзНржЯ ржХржЗрж░рзЛ ржирж╛! ЁЯШД`,
      `рж╕ржорзЯ рждрзЛ **${currentTime}**, ржХрж┐ржирзНрждрзБ рж╕ржорзЯрзЗрж░ ржорзВрж▓рзНржп ржЯрзЗрж░ ржкрж╛ржмрзЗ ржпржЦржи ржлрзБрж░рж╛ржмрзЗ! ЁЯШЙ`,
      `ржШрзЬрж┐рждрзЗ ржПржЦржи: ${currentTime} тП│`,
      `Time check? It's ${moment().tz("Asia/Dhaka").format("h:mm A")} now!`,
      `ржЖржЬржХрзЗ ${moment().tz("Asia/Dhaka").format("D MMMM")}, рж╕ржорзЯ ржмрзЯрзЗ ржпрж╛ржЪрзНржЫрзЗ! ЁЯШК`,
      `ржПржЦржи рж╕ржорзЯ ржХрж╛ржЬ ржХрж░рж╛рж░! ЁЯХТ ${currentTime}`
    ];
    return sendReply(timeResponses[Math.floor(Math.random() * timeResponses.length)]);
  }

  // 6. DEFAULT FALLBACK (50+ smart replies)
  const fallbackResponses = [
    `${name}, ржПржХржЯрзБ ржкрж░рж┐рж╖рзНржХрж╛рж░ ржХрж░рзЗ ржмрж▓ржмрзЗржи? ЁЯдФ`,  
    `I didn't quite get that... ЁЯШЕ Say again?`,  
    `${name}, ржПржЗ ржмрж┐рж╖рзЯрзЗ ржЖржорж┐ ржЖрж░рзЛ ржЬрж╛ржирждрзЗ ржЪрж╛ржЗ! ЁЯФН`,  
    `ржЖржорж┐ ржПржЦржирзЛ рж╢рж┐ржЦржЫрж┐ ${name}! ЁЯза Explain differently?`,  
    `Sorry ${name}, ржЖржорж╛рж░ ржмрзЛржзржЧржорзНржп рж╣рж▓рзЛ ржирж╛! ЁЯШв`,
    `ржУрж╣рзЛ! ржЖржорж╛рж░ AI Brain ржЖржЬржХрзЗ ржарж┐ржХ ржХрж╛ржЬ ржХрж░ржЫрзЗ ржирж╛! ЁЯШЖ`,
    `${name}, ржЖржкржирж┐ ржХрж┐ Bangla ржмрж╛ English ржП ржмрж▓ржмрзЗржи? ЁЯТм`,
    `ржЖржорж┐ Confused! ЁЯШ╡тАНЁЯТл ржПржХржЯрзБ рж╕рж╣ржЬ ржХрж░рзЗ ржмрж▓рзБржи...`,
    `ржПржЗржЯрж╛ ржЖржорж╛рж░ Programming ржП ржирж╛ржЗ! ЁЯе▓ ржирждрзБржи ржХрж┐ржЫрзБ рж╢рж┐ржЦржм?`,
    `ржХржерж╛ржЯрж╛ ржЖржорж╛рж░ Database ржП ржирж╛ржЗ ${name}! ЁЯШЕ`
  ];
  
  // 50% chance to reply to unrecognized messages
  if (Math.random() < 0.5) {
    return sendReply(fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)]);
  }
};

module.exports.run = function({ api, event, client, __GLOBAL }) { }
